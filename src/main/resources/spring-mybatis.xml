<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="cn.datacenter" />

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!--
 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		初始化连接大小
		<property name="initialSize" value="${initialSize}"></property>
		连接池最大数量
		<property name="maxActive" value="${maxActive}"></property>
		连接池最大空闲
		<property name="maxIdle" value="${maxIdle}"></property>
		连接池最小空闲
		<property name="minIdle" value="${minIdle}"></property>
		获取连接最大等待时间
		<property name="maxWait" value="${maxWait}"></property>
		<property name="validationQuery" value="${validationQuery}" />
	</bean> -->
	<!-- 启用alibaba druid连接池 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    <property name="driverClassName" value="${driverClassName}" ></property>
		<property name="url" value="${url}" ></property>
		<property name="username" value="${username}" ></property>
		<property name="password" value="${password}" ></property>
		 <!-- 数据库基本信息配置 -->  
		<property name="initialSize" value="${initialSize}" ></property>	
		<property name="maxActive" value="${maxActive}" ></property>	
		<property name="maxIdle" value="${maxIdle}" ></property>
		<property name="minIdle" value="${minIdle}" ></property>		
		<property name="maxWait" value="${maxWait}" ></property>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
		<property name="validationQuery" value="${validationQuery}" ></property>
		<property name="testOnBorrow" value="${testOnBorrow}" ></property>
		<property name="testOnReturn" value="${testOnReturn}" ></property>
		<property name="testWhileIdle" value="${testWhileIdle}" ></property>
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" ></property>
		<property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" ></property> 
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" ></property>
		<!-- 打开 removeAbandoned 功能 -->  
		<property name="removeAbandoned" value="${removeAbandoned}" ></property>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" ></property>
		<!-- 关闭 abanded 连接时输出错误日志 -->   
		<property name="logAbandoned" value="${logAbandoned}" ></property>
		<property name="filters" value="stat" ></property>
	</bean>

	<!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:cn/datacenter/mapping/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.datacenter.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans> 